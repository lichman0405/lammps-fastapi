version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "18000:18000"
    volumes:
      - ./app:/app
      - ./data:/app/data
      - ./logs:/app/logs
      - ./examples:/app/examples
    working_dir: /app
    command: uvicorn app.main:app --host 0.0.0.0 --port 18000 --workers 4
    env_file:
      - .env  # ✅ 统一加载.env文件
    environment:
      - PYTHONPATH=/app  # ✅ 保证正确加载代码模块
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - lammps-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:18000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A app.celery_app worker --loglevel=info --concurrency=2 --max-memory-per-child=1000000
    volumes:
      - ./app:/app
      - ./data:/app/data
      - ./logs:/app/logs
      - ./examples:/app/examples
    env_file:
      - .env  # ✅ 关键：加载.env文件，注入CELERY配置
    environment:
      - PYTHONPATH=/app
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - lammps-network
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  redis:
    image: redis:7-alpine
    ports:
      - "16379:6379"
    volumes:
      - redis_data:/data
    networks:
      - lammps-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

  nginx:
    image: nginx:alpine
    ports:
      - "18080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./static:/usr/share/nginx/html
    depends_on:
      - api
    networks:
      - lammps-network

volumes:
  redis_data:

networks:
  lammps-network:
    driver: bridge
